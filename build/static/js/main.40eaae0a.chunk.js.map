{"version":3,"sources":["components/Header/index.js","services/Github.js","services/FavoritesRepos.js","store/actions.js","components/ReposTable/index.js","components/ReposTable/TableRow.js","containers/Repos/index.js","containers/Favorites/index.js","App.js","store/state.js","store/index.js","index.js"],"names":["Header","react_default","a","createElement","Github","search","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","repo","favorites","repos","limit","response","data","list","wrap","_context2","prev","next","axios","get","concat","sent","items","slice","map","_ref2","_callee","isFav","tag","infos","_context","tags_url","then","resp","name","find","fav","id","full_name","lang","language","url","html_url","push","stop","this","_x3","apply","arguments","Promise","all","abrupt","_x","_x2","FavoritesRepos","favs","JSON","parse","localStorage","getItem","set","setItem","stringify","fetchFavorites","Favorites","dispatch","type","payload","request","ReposService","length","alert","addToFavorites","removeFavorite","_ref4","_callee3","_ref3","index","_context3","splice","_x4","ReposTable","props","children","TableRow","href","target","rel","className","onClick","buttonLabel","Repos","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","repoName","_handleChange","bind","assertThisInitialized","event","setState","value","_this2","_this$props","onSubmit","e","preventDefault","required","onChange","placeholder","components_ReposTable","ReposTable_TableRow","key","Component","connect","bindActionCreators","App","components_Header","containers_Repos","containers_Favorites","INITIAL_STATE","combineReducers","undefined","action","objectSpread","newArr","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","Thunk","Multi","promise","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.40eaae0a.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>My Github Favorites</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import axios from 'axios'\r\n\r\n//search() requires the repo name to search and the array of current favorites repos\r\nconst search = async (repo, favorites) => {\r\n    let repos   = []\r\n    const limit = 10\r\n\r\n    const response = await axios.get(`https://api.github.com/search/repositories?q=${repo}`)\r\n    const data     = response.data.items\r\n\r\n    const list = data.slice(0, limit).map(async repo => {\r\n        let isFav = false\r\n        let tag   = ''\r\n        let infos = {}\r\n\r\n        /**\r\n         * Returns the repo's tag.\r\n         * If there's no tag to return, it return a hyphen\r\n         */\r\n        tag = await axios.get(repo.tags_url).then(resp => !resp.data[0] ? '-' : resp.data[0].name)\r\n\r\n        /* \r\n         * Searching on favorites array if this repo is already favorited\r\n         * array.find() is the choosed method beacuse it returns the first item wich is true\r\n         * It does not check the remaining values.\r\n        */\r\n        favorites.find(fav => fav.id === repo.id ? isFav = !isFav : isFav)\r\n\r\n        infos = {\r\n            id  : repo.id,\r\n            name: repo.full_name,\r\n            lang: repo.language,\r\n            url : repo.html_url, \r\n            tag,\r\n            isFav\r\n        }\r\n\r\n        repos.push(infos)\r\n\r\n    })\r\n    await Promise.all(list)\r\n    return repos\r\n}\r\n\r\nexport default {\r\n    search\r\n}","\r\nconst get = async () => {\r\n  const favs = await JSON.parse(localStorage.getItem('favorites'))\r\n  if(!favs){\r\n    return []\r\n  }\r\n  return favs\r\n}\r\n\r\nconst set = favorites => localStorage.setItem('favorites', JSON.stringify(favorites))\r\n\r\nexport default {\r\n  get,\r\n  set\r\n}","\r\nimport ReposService from 'services/Github'\r\nimport Favorites    from 'services/FavoritesRepos'\r\n\r\nconst fetchFavorites = () => {\r\n    const favorites = Favorites.get()\r\n    \r\n    return dispatch => dispatch({\r\n        type: 'FETCH_FAVORITES',\r\n        payload: favorites\r\n    })\r\n}\r\n\r\nconst search = async (repo, favorites) => {\r\n    const request = await ReposService.search(repo, favorites)\r\n    if(request.length < 1){ return alert('No repos found') }\r\n\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'REPOS_FINDED',\r\n            payload: request\r\n        })\r\n    }\r\n}\r\n\r\nconst addToFavorites = async repo => {\r\n    const favorites = await Favorites.get()\r\n    favorites.push(repo)\r\n    Favorites.set(favorites)\r\n\r\n    return dispatch => dispatch({\r\n        type: 'ADD_FAV',\r\n        favorites,\r\n        repo\r\n    })\r\n}\r\n\r\nconst removeFavorite = async ({repo, index}) => {\r\n    const favorites = await Favorites.get()\r\n\r\n    favorites.splice(index, 1)\r\n    Favorites.set(favorites)\r\n    \r\n    return dispatch => dispatch({\r\n        type: 'REMOVE_FAV',\r\n        favorites,\r\n        repo\r\n    })\r\n}\r\n\r\nexport {\r\n    search,\r\n    addToFavorites,\r\n    removeFavorite,\r\n    fetchFavorites,\r\n}\r\n","import React from 'react'\r\nimport './repos_table.css'\r\n\r\nconst ReposTable = props => {\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Language</th>\r\n                    <th>Latest tag</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.children}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ReposTable\r\n","import React from 'react'\r\n\r\nconst TableRow = props => (\r\n    <tr>\r\n        <td>\r\n            <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">{props.name}</a>\r\n        </td>\r\n\r\n        <td>\r\n            {props.lang}\r\n        </td>\r\n\r\n        <td>\r\n            {props.tag}\r\n        </td>\r\n\r\n        <td>\r\n            { \r\n                props.isFav !== ''\r\n                ? !props.isFav \r\n                    ? <button className=\"add-btn\" onClick={props.onClick}>{props.buttonLabel}</button>\r\n                    : false\r\n                : <button className=\"add-btn\" onClick={props.onClick}>{props.buttonLabel}</button>\r\n            }\r\n\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default TableRow\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { search, addToFavorites } from 'store/actions'\r\n\r\nimport ReposTable from 'components/ReposTable'\r\nimport TableRow from 'components/ReposTable/TableRow'\r\n\r\nimport './repos.css'\r\nclass Repos extends Component {\r\n    constructor(props){\r\n        super()\r\n        this.state = {\r\n            repoName : '',\r\n        }\r\n        this._handleChange = this._handleChange.bind(this)\r\n    }\r\n\r\n    _handleChange(event){\r\n        this.setState({ repoName: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        let { repoName }  = this.state\r\n        let { favorites, repos, addToFavorites } = this.props\r\n        return (\r\n            <div className=\"flexed-child\">\r\n                <form className=\"form\" onSubmit={e => {e.preventDefault(); this.props.search(repoName, favorites)}}>\r\n                    <input \r\n                        required\r\n                        type=\"text\"\r\n                        name=\"repo\"\r\n                        value={repoName}\r\n                        onChange={this._handleChange}\r\n                        placeholder=\"Search for a Github repository\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Search\" />\r\n                </form>\r\n\r\n                <ReposTable>\r\n                    {   \r\n                        repos.map(repo =>\r\n                            <TableRow \r\n                                key={repo.id}\r\n                                url={repo.url}\r\n                                name={repo.name}\r\n                                lang={repo.lang}\r\n                                tag={repo.tag}\r\n                                buttonLabel=\"Add\"\r\n                                isFav={repo.isFav}\r\n                                onClick={() => addToFavorites(repo)}\r\n                            />\r\n                        )\r\n                    }\r\n                </ReposTable>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps    = state    => ({ repos: state.repos.repos, favorites: state.repos.favorites })\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ search, addToFavorites }, dispatch)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Repos)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { fetchFavorites, removeFavorite } from 'store/actions'\r\n\r\nimport ReposTable from 'components/ReposTable'\r\nimport TableRow from 'components/ReposTable/TableRow'\r\n\r\nclass Favorites extends Component {\r\n    componentWillMount(){\r\n        this.props.fetchFavorites()\r\n    }\r\n\r\n    render() {\r\n        let { favorites, removeFavorite } = this.props\r\n        return (\r\n            <div className=\"flexed-child purple-bg\">\r\n               <ReposTable>\r\n                    {favorites.map((repo, index) => \r\n                        <TableRow \r\n                            key={repo.id}\r\n                            url={repo.url}\r\n                            name={repo.name}\r\n                            lang={repo.lang}\r\n                            tag={repo.tag}\r\n                            buttonLabel=\"Remove\"\r\n                            onClick={() => removeFavorite({repo, index})}\r\n                        />\r\n                    )}\r\n                </ReposTable> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps    = state    => ({ favorites: state.repos.favorites })\r\nconst mapDispacthToProps = dispatch => bindActionCreators({ fetchFavorites, removeFavorite }, dispatch)\r\nexport default connect(mapStateToProps, mapDispacthToProps)(Favorites)\r\n","import React, { Component } from 'react'\n\nimport Header from './components/Header'\nimport Repos from './containers/Repos'\nimport Favorites from './containers/Favorites'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <div className=\"wrapper\">\n          <Repos />\n          <Favorites />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    repos: [],\r\n    favorites: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'REPOS_FINDED' :\r\n            return { ...state, repos: action.payload }\r\n\r\n        case 'FETCH_FAVORITES' : \r\n            return { ...state, favorites: action.payload }\r\n\r\n        case 'ADD_FAV' :\r\n            let newArr = state.repos.slice()\r\n            return {\r\n                ...state,\r\n                repos: newArr.map(\r\n                    repo => \r\n                    repo.id === action.repo.id \r\n                    ? {...repo, isFav: !repo.isFav}\r\n                    : repo),\r\n                favorites: action.favorites\r\n            }\r\n\r\n        case 'REMOVE_FAV' :\r\n            let repos = state.repos.slice()\r\n            return {\r\n                ...state,\r\n                repos: repos.map(\r\n                    repo => \r\n                    repo.id === action.repo.id \r\n                    ? {...repo, isFav: !repo.isFav}\r\n                    : repo),\r\n                favorites: action.favorites\r\n            }\r\n\r\n        default : \r\n            return state\r\n    }\r\n}\r\n\r\n","\r\nimport { combineReducers } from 'redux'\r\nimport state from './state'\r\n\r\nexport default combineReducers({\r\n    repos: state\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux'\n\nimport promise from 'redux-promise'\nimport Thunk from 'redux-thunk'\nimport Multi from 'redux-multi'\n\nimport './index.css'\nimport App from './App'\nimport reducers from './store'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = applyMiddleware(Thunk, Multi, promise)(createStore)(reducers, devTools)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'))"],"sourceRoot":""}